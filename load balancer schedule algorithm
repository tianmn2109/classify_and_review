1: 轮询调度
	j = i;
	do {
		j = (j + 1) mod n;
		if (W(Sj) > 0) {
		i = j;
		return Si;
	}
	} while (j != i);
	return NULL;
2: Round-Robin DNS: 轮询调度的方式将一个域名解析到多个IP地址，
                    但轮询DNS方法的调度粒度是基于每个域名服务器的，
		    域名服务器对域名解析的缓存会妨碍轮询解析域名生效，
		    这会导致服务器间负载的严重不平衡。
3: IPVS轮询调度算法的粒度是基于每个连接的，同一用户的不同连接都会被调度到不同的服务器上，
   所以这种细粒度的轮询调度要比DNS的轮询调度优越很多。
4:权重轮询调度算法(Weighted Round-Robin Scheduling)
假设有一组服务器S = {S0, S1, …, Sn-1}，W(Si)表示服务器Si的权值，
一个指示变量i表示上一次选择的服务器，指示变量cw表示当前调度的权值，
max(S)表示集合S中所有服务器的最大权值，gcd(S)表示集合S中所有服务器权值的最大公约数。
变量i初始化为-1，cw初始化为零。其算法如下：

while (true) { 
	i = (i + 1) mod n;
	if (i == 0) {      
		cw = cw - gcd(S);  
		if (cw <= 0) {
			cw = max(S);     
			if (cw == 0)
				return NULL;
			}
		} 
	if (W(Si) >= cw)
	return Si;
} 
